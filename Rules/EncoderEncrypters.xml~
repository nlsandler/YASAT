<?xml version="1.0" encoding="utf-8" ?>
<Rules>
  <Rule>
    <Title>Potential Custom Encryption or Hardcoded keys</Title>
    <RegularExpressionPattern>(encrypt|decrypt|crypt|hash)\s*(er|or)?\(.*\)</RegularExpressionPattern>
    <Extensions>
      <Extension>c</Extension>
      <Extension>cpp</Extension>
      <Extension>h</Extension>
      <Extension>hpp</Extension>
      <Extension>cs</Extension>
      <Extension>java</Extension>
      <Extension>py</Extension>
      <Extension>php</Extension>
      <Extension>js</Extension>
      <Extension>m</Extension>
      <Extension>pl</Extension>
      <Extension>sql</Extension>
      <Extension>vb</Extension>
      <Extension>rb</Extension>
      <Extension>erb</Extension>
      <Extension>scala</Extension>
    </Extensions>
    <Guidance>
    <Url>http://teammentor.securityinnovation.com/default.aspx#Filter=%7B%7D%7BCategory%7CCryptography%7D</Url>
    </Guidance>
    <Description>Custom encryption should never be used. Upgrade to industry standards such as RSA, AES, SHA256, etc.</Description>
    <RealPositiveExamples>
      <Example></Example>
    </RealPositiveExamples>
    <FalsePositiveExamples>
    </FalsePositiveExamples>
  </Rule>
  <Rule>
    <Title>Potential poor encoder</Title>
    <RegularExpressionPattern>(encod|decod)(e|er|or|r)\s*?\(.*\)</RegularExpressionPattern>
    <Extensions>
      <Extension>c</Extension>
      <Extension>cpp</Extension>
      <Extension>h</Extension>
      <Extension>hpp</Extension>
      <Extension>cs</Extension>
      <Extension>java</Extension>
      <Extension>py</Extension>
      <Extension>php</Extension>
      <Extension>js</Extension>
      <Extension>m</Extension>
      <Extension>pl</Extension>
      <Extension>sql</Extension>
      <Extension>vb</Extension>
      <Extension>rb</Extension>
      <Extension>erb</Extension>
      <Extension>scala</Extension>
    </Extensions>
    <Guidance>
    <Url>http://teammentor.securityinnovation.com/default.aspx#Filter=%7B%7D%7BCategory%7CCryptography%7D</Url>
    </Guidance>
    <Description>Custom encryption should never be used. Upgrade to industry standards such as RSA, AES, SHA256, etc.</Description>
    <RealPositiveExamples>
      <Example>int errcode = Encode(ciphertext, plaintext, len);</Example>
      <Example> echo secret_encoding($secret); </Example>
      <Example> NSData * cipherText = [plainText encodeWithKey: key]; </Example> 
      <Example> - (NSData *)encodeSecret:(NSData *)plainSecret { </Example>
      <Example> plaintext = ciphertext.decode() </Example>
      <Example> messages.Append(EncodeMessage("plaintext")); </Example>
      <Example> cipherText = new EncodedMessage(plainText, key); </Example>
    </RealPositiveExamples>
    <!--Actually avoiding these false positives, while still capturing the full range of potential problems, does not seem realistic to me. -->
    <FalsePositiveExamples>
       <Example>function urlEncode(str) {</Example>
       <Example> echo '&lt;a href="'.$url.'/path/to/page?var='.urlencode($var).'"&gt;click&lt;/a&gt;</Example>
       <Example> $param = base64_decode((string)trim($_GET['value'])); </Example>
       <Example> parameter = URLEncoder.encode(plain_param); </Example>
   </FalsePositiveExamples>
  </Rule>
</Rules>
 
